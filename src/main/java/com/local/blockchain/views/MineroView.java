package com.local.blockchain.views;

import com.local.blockchain.Bloque;
import com.local.blockchain.Minero;
import com.local.blockchain.Nodo;
import java.awt.Color;
import java.util.Timer;
import java.util.TimerTask;
import javax.swing.JLabel;
import javax.swing.JOptionPane;

public class MineroView extends javax.swing.JFrame {

    Minero minero;
    private boolean minando = false;
    private Timer timer;

    public MineroView(Nodo nodo) {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        this.minero = (Minero) nodo;
        setTitle("" + minero.getId());
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        panelContenedor = new javax.swing.JPanel();
        btnMinar = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        estadoMinar = new javax.swing.JProgressBar();
        jScrollPane2 = new javax.swing.JScrollPane();
        PanelHistorialTrans = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        panelContenedor.setBackground(new java.awt.Color(255, 204, 51));

        btnMinar.setBackground(new java.awt.Color(255, 153, 51));
        btnMinar.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        btnMinar.setForeground(new java.awt.Color(0, 0, 0));
        btnMinar.setText("Empezar A Minar");
        btnMinar.setBorderPainted(false);
        btnMinar.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        btnMinar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnMinarActionPerformed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("sansserif", 1, 24)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Minero");

        jButton4.setBackground(new java.awt.Color(255, 153, 51));
        jButton4.setFont(new java.awt.Font("sansserif", 1, 13)); // NOI18N
        jButton4.setForeground(new java.awt.Color(0, 0, 0));
        jButton4.setText("Consultar Cadena");
        jButton4.setBorderPainted(false);
        jButton4.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        estadoMinar.setBackground(new java.awt.Color(255, 0, 51));

        jScrollPane2.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setVerticalScrollBarPolicy(javax.swing.ScrollPaneConstants.VERTICAL_SCROLLBAR_ALWAYS);
        jScrollPane2.setAutoscrolls(true);

        PanelHistorialTrans.setBackground(new java.awt.Color(204, 204, 204));
        PanelHistorialTrans.setLayout(new javax.swing.BoxLayout(PanelHistorialTrans, javax.swing.BoxLayout.Y_AXIS));
        jScrollPane2.setViewportView(PanelHistorialTrans);

        jLabel7.setFont(new java.awt.Font("DejaVu Sans Mono", 0, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(0, 0, 0));
        jLabel7.setText("Consola (Log)");

        javax.swing.GroupLayout panelContenedorLayout = new javax.swing.GroupLayout(panelContenedor);
        panelContenedor.setLayout(panelContenedorLayout);
        panelContenedorLayout.setHorizontalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addGap(135, 135, 135)
                .addComponent(jLabel3)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(panelContenedorLayout.createSequentialGroup()
                        .addGap(25, 25, 25)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 310, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContenedorLayout.createSequentialGroup()
                        .addGap(100, 100, 100)
                        .addGroup(panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnMinar, javax.swing.GroupLayout.PREFERRED_SIZE, 161, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton4)))
                    .addGroup(panelContenedorLayout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(estadoMinar, javax.swing.GroupLayout.PREFERRED_SIZE, 126, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(panelContenedorLayout.createSequentialGroup()
                        .addGap(131, 131, 131)
                        .addComponent(jLabel7)))
                .addContainerGap(33, Short.MAX_VALUE))
        );
        panelContenedorLayout.setVerticalGroup(
            panelContenedorLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelContenedorLayout.createSequentialGroup()
                .addGap(6, 6, 6)
                .addComponent(jLabel3)
                .addGap(36, 36, 36)
                .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(btnMinar, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(estadoMinar, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel7)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 129, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(17, 17, 17))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(panelContenedor, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnMinarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnMinarActionPerformed
        if (minando) {
            estadoMinar.setBackground(Color.RED);
            minando = false;
            if (timer != null) {
                timer.cancel();
                logEnConsola("Minado detenido...");
            }
        } else {
            estadoMinar.setBackground(Color.GREEN);
            minando = true;
            empezarMinado(); // Llamar al m√©todo empezarMinado
        }

        estadoMinar.revalidate();
        estadoMinar.repaint();
    }//GEN-LAST:event_btnMinarActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed

    private void empezarMinado() {
        timer = new Timer();
        logEnConsola("Empezando a minar...");
        
        TimerTask task = new TimerTask() {
            public void run() {
                Bloque bloque = minero.crearBloque();
                if (bloque != null) {
                    logEnConsola("Empezando a minar bloque...");
                    Bloque resultado = minero.minarBloque(bloque);

                    if (resultado != null) {
                        JOptionPane.showMessageDialog(null, "BLOQUE MINADO!", "Mensaje", JOptionPane.INFORMATION_MESSAGE);
                        String mensaje = "Nonce:" + resultado.getNonce() + " Hash:" + resultado.getHash();
                        logEnConsola(mensaje);
                    }

                } else {
                    logEnConsola("En espera de suficientes transacciones");
                }
            }
        };
        timer.scheduleAtFixedRate(task, 0, 5000);
    }

    private void logEnConsola(String mensaje) {
        JLabel label = new JLabel(mensaje);
        PanelHistorialTrans.add(label);
        PanelHistorialTrans.revalidate();
        PanelHistorialTrans.repaint();
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelHistorialTrans;
    private javax.swing.JButton btnMinar;
    private javax.swing.JProgressBar estadoMinar;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JPanel panelContenedor;
    // End of variables declaration//GEN-END:variables
}
